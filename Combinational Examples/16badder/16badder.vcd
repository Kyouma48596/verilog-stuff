$date
	Fri May 08 12:06:17 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module sixteen_test $end
$var wire 16 ! out [15:0] $end
$var wire 1 " Cout $end
$var reg 1 # Cin $end
$var reg 16 $ in1 [15:0] $end
$var reg 16 % in2 [15:0] $end
$scope module DUT $end
$var wire 1 # Cin $end
$var wire 16 & in1 [15:0] $end
$var wire 16 ' in2 [15:0] $end
$var wire 16 ( out [15:0] $end
$var wire 3 ) c [2:0] $end
$var wire 1 " Cout $end
$scope module A0 $end
$var wire 1 # Cin $end
$var wire 4 * in1 [3:0] $end
$var wire 4 + in2 [3:0] $end
$var wire 4 , out [3:0] $end
$var wire 3 - c [2:0] $end
$var wire 1 . Cout $end
$scope module FA0 $end
$var wire 1 # Cin $end
$var wire 1 / Cout $end
$var wire 1 0 in1 $end
$var wire 1 1 in2 $end
$var wire 1 2 out $end
$var wire 1 3 w $end
$upscope $end
$scope module FA1 $end
$var wire 1 4 Cin $end
$var wire 1 5 Cout $end
$var wire 1 6 in1 $end
$var wire 1 7 in2 $end
$var wire 1 8 out $end
$var wire 1 9 w $end
$upscope $end
$scope module FA2 $end
$var wire 1 : Cin $end
$var wire 1 ; Cout $end
$var wire 1 < in1 $end
$var wire 1 = in2 $end
$var wire 1 > out $end
$var wire 1 ? w $end
$upscope $end
$scope module FA3 $end
$var wire 1 @ Cin $end
$var wire 1 . Cout $end
$var wire 1 A in1 $end
$var wire 1 B in2 $end
$var wire 1 C out $end
$var wire 1 D w $end
$upscope $end
$upscope $end
$scope module A1 $end
$var wire 1 E Cin $end
$var wire 4 F in1 [3:0] $end
$var wire 4 G in2 [3:0] $end
$var wire 4 H out [3:0] $end
$var wire 3 I c [2:0] $end
$var wire 1 J Cout $end
$scope module FA0 $end
$var wire 1 E Cin $end
$var wire 1 K Cout $end
$var wire 1 L in1 $end
$var wire 1 M in2 $end
$var wire 1 N out $end
$var wire 1 O w $end
$upscope $end
$scope module FA1 $end
$var wire 1 P Cin $end
$var wire 1 Q Cout $end
$var wire 1 R in1 $end
$var wire 1 S in2 $end
$var wire 1 T out $end
$var wire 1 U w $end
$upscope $end
$scope module FA2 $end
$var wire 1 V Cin $end
$var wire 1 W Cout $end
$var wire 1 X in1 $end
$var wire 1 Y in2 $end
$var wire 1 Z out $end
$var wire 1 [ w $end
$upscope $end
$scope module FA3 $end
$var wire 1 \ Cin $end
$var wire 1 J Cout $end
$var wire 1 ] in1 $end
$var wire 1 ^ in2 $end
$var wire 1 _ out $end
$var wire 1 ` w $end
$upscope $end
$upscope $end
$scope module A2 $end
$var wire 1 a Cin $end
$var wire 4 b in1 [3:0] $end
$var wire 4 c in2 [3:0] $end
$var wire 4 d out [3:0] $end
$var wire 3 e c [2:0] $end
$var wire 1 f Cout $end
$scope module FA0 $end
$var wire 1 a Cin $end
$var wire 1 g Cout $end
$var wire 1 h in1 $end
$var wire 1 i in2 $end
$var wire 1 j out $end
$var wire 1 k w $end
$upscope $end
$scope module FA1 $end
$var wire 1 l Cin $end
$var wire 1 m Cout $end
$var wire 1 n in1 $end
$var wire 1 o in2 $end
$var wire 1 p out $end
$var wire 1 q w $end
$upscope $end
$scope module FA2 $end
$var wire 1 r Cin $end
$var wire 1 s Cout $end
$var wire 1 t in1 $end
$var wire 1 u in2 $end
$var wire 1 v out $end
$var wire 1 w w $end
$upscope $end
$scope module FA3 $end
$var wire 1 x Cin $end
$var wire 1 f Cout $end
$var wire 1 y in1 $end
$var wire 1 z in2 $end
$var wire 1 { out $end
$var wire 1 | w $end
$upscope $end
$upscope $end
$scope module A3 $end
$var wire 1 } Cin $end
$var wire 4 ~ in1 [3:0] $end
$var wire 4 !" in2 [3:0] $end
$var wire 4 "" out [3:0] $end
$var wire 3 #" c [2:0] $end
$var wire 1 " Cout $end
$scope module FA0 $end
$var wire 1 } Cin $end
$var wire 1 $" Cout $end
$var wire 1 %" in1 $end
$var wire 1 &" in2 $end
$var wire 1 '" out $end
$var wire 1 (" w $end
$upscope $end
$scope module FA1 $end
$var wire 1 )" Cin $end
$var wire 1 *" Cout $end
$var wire 1 +" in1 $end
$var wire 1 ," in2 $end
$var wire 1 -" out $end
$var wire 1 ." w $end
$upscope $end
$scope module FA2 $end
$var wire 1 /" Cin $end
$var wire 1 0" Cout $end
$var wire 1 1" in1 $end
$var wire 1 2" in2 $end
$var wire 1 3" out $end
$var wire 1 4" w $end
$upscope $end
$scope module FA3 $end
$var wire 1 5" Cin $end
$var wire 1 " Cout $end
$var wire 1 6" in1 $end
$var wire 1 7" in2 $end
$var wire 1 8" out $end
$var wire 1 9" w $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
bx #"
bx ""
bx !"
bx ~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
bx e
bx d
bx c
bx b
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
bx I
bx H
bx G
bx F
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
x#
x"
bx !
$end
#5
18"
0"
05"
13"
00"
0/"
1-"
0*"
0)"
b1111 ""
1'"
b0 #"
0$"
0}
1{
0f
0x
1v
0s
0r
1p
0m
0l
b1111 d
1j
b0 e
0g
0a
1_
0J
0\
1Z
0W
0V
1T
0Q
0P
b1111 H
1N
b0 I
0K
0E
1C
b0 )
0.
0@
1>
0;
0:
18
05
04
b1111111111111111 !
b1111111111111111 (
b1111 ,
12
b0 -
0/
13
19
1?
1D
1O
1U
1[
1`
1k
1q
1w
1|
1("
1."
14"
19"
11
17
1=
1B
1M
1S
1Y
1^
1i
1o
1u
1z
1&"
1,"
12"
17"
00
06
0<
0A
0L
0R
0X
0]
0h
0n
0t
0y
0%"
0+"
01"
06"
b1111 +
b1111 G
b1111 c
b1111 !"
b0 *
b0 F
b0 b
b0 ~
0#
b1111111111111111 %
b1111111111111111 '
b0 $
b0 &
#10
08"
1"
15"
03"
10"
1/"
0-"
1*"
1)"
b0 ""
0'"
b111 #"
1$"
1}
0{
1f
1x
0v
1s
1r
0p
1m
1l
b0 d
0j
b111 e
1g
1a
0_
1J
1\
0Z
1W
1V
0T
1Q
1P
b0 H
0N
b111 I
1K
1E
0C
b111 )
1.
1@
0>
1;
1:
08
15
b0 !
b0 (
b0 ,
02
14
03
b111 -
1/
10
b1 *
b1 $
b1 &
#15
08"
1"
0a
15"
1_
0J
03"
10"
1@
0\
1r
0}
1/"
0>
1;
1Z
0W
0p
1m
1{
0f
0-"
1*"
1:
1C
0E
0N
1P
b1110 H
1T
0V
0j
1l
b1100 d
1v
0x
b0 ""
0'"
1)"
04
09
15
0D
b0 )
0.
0O
1K
0U
b1 I
0Q
0k
1g
0w
b11 e
0s
0("
b111 #"
1$"
b110 -
0/
01
07
0=
0B
0M
0S
0Y
0i
0u
0z
0&"
07"
00
1<
1X
1y
16"
b110011101001 !
b110011101001 (
b1001 ,
12
b0 +
b1000 G
b10 c
b110 !"
b100 *
b100 F
b1000 b
b1000 ~
1#
b110001010000000 %
b110001010000000 '
b1000100001000100 $
b1000100001000100 &
